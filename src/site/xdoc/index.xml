<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

	<properties>
		<title>About</title>
		<author email="info@funfried.de">Fabian Bahle</author>
	</properties>

	<body>
		<section name="What is External Code Formatters for NetBeans?">
			<p>
				(Formerly known as Eclipse Java Code Formatter for NetBeans)
			</p>
			<p>
				This is the project page of the <a href="https://netbeans.apache.org">NetBeans IDE</a> plugin
				<i>External Code Formatters for NetBeans</i>. This plugin helps you to apply to a common
				code style in a team of Eclipse, IntelliJ and NetBeans IDE users. You can use several
				external code formatters inside the NetBeans IDE (see below), depending on whatever your
				co-workers use. The original formatting engine of Eclipse, the Google Code Formatter, the
				Spring Java Formatter or any other are embedded and allow you to format the source code the
				same way as e.g. your co-workers do with their Eclipse IDE.
			</p>
			<subsection name="Supported Formatters">
				<ul>
					<li>
						Java
						<ul>
							<li>
								<a href="https://github.com/google/google-java-format">Google Code Formatter</a>
							</li>
							<li>
								<a href="https://help.eclipse.org/kepler/index.jsp?topic=%2Forg.eclipse.jdt.doc.isv%2Fguide%2Fjdt_api_codeformatter.htm">Eclipse Java Code Formatter</a>
							</li>
							<li>
								<a href="https://github.com/spring-io/spring-javaformat">Spring Java Formatter</a>
							</li>
							<li>
								<a href="https://github.com/palantir/palantir-java-format">Palantir Java Formatter</a>
							</li>
						</ul>
					</li>
					<li>
						Javascript
						<ul>
							<li>
								<a href="https://help.eclipse.org/2019-12/index.jsp?topic=%2Forg.eclipse.wst.jsdt.doc%2Fstarted%2Foverview.html&amp;cp%3D52_0">Eclipse Javascript Code Formatter</a>  (via <a href="https://github.com/funfried/jsdt-core">modified revelc jsdt-core</a>)
							</li>
						</ul>
					</li>
					<li>
						XML
						<ul>
							<li>
								<a href="https://github.com/revelc/xml-formatter">revelc.net XML Code Formatter</a>
							</li>
							<li>
								<a href="https://jsoup.org/">Jsoup XML Code Formatter</a>
							</li>
						</ul>
					</li>
					<li>
						Json
						<ul>
							<li>
								<a href="https://github.com/FasterXML/jackson">Jackson Json Code Formatter</a>
							</li>
						</ul>
					</li>
					<li>
						SQL
						<ul>
							<li>
								<a href="https://github.com/manticore-projects/jsqlformatter">manticore JSQLFormatter</a>
							</li>
							<li>
								<a href="https://github.com/vertical-blank/sql-formatter">Vertical Blank SQL Formatter</a>
							</li>
							<li>
								<a href="https://github.com/diffplug/spotless">DBeaver SQL Formatter (via Spotless)</a>
							</li>
						</ul>
					</li>
				</ul>
			</subsection>
			<subsection name="Note">
				<p>
					Please note that this plugin only provides support for formatting. Eclipse users may miss
					the application of save-actions like "adding @Override annotations" or "member sort order".
					Such AST-based transformations are not (yet) provided by this plugin.
				</p>
			</subsection>
			<subsection name="Compatibility">
				<p>
					Compatible with NetBeans 12.0+ and JDK 21+.
				</p>
			</subsection>
		</section>
		<section name="Current features">
			<ul>
				<li>Makes use of the internal NetBeans formatting API, which makes it possible to reuse built-in features like the format on save action or format only selected lines, ... (since 1.13)</li>
				<li>Global configuration and project specific configuration</li>
				<li>Shows the used formatter in a notification (Disabled by default)</li>
				<li>Supports Eclipse formatter profiles (since 1.6)</li>
				<li>Code templates for @formatter:on/off (since 1.9)</li>
				<li>Supports <a href="https://code.google.com/a/eclipselabs.org/p/workspacemechanic/">Workspace Mechanic</a> configuration file (since 1.10)</li>
				<li>Support configuration from .settings/org.eclipse.jdt.core.prefs (absolute and relative paths) (since 1.10)</li>
				<li>Support configuration of linefeed (since 1.10)</li>
				<li>Support for macro invocation (since 1.12)</li>
				<li>Support for guarded documents (documents that are created by the NetBeans GUI builder, guarded blocks are skipped of course, but everything in between can be formatted), only for Eclipse Java Code Formatter (since 1.13)</li>
				<li>Support for Google code formatter (since 1.13)</li>
				<li>Support for Spring Java formatter (since 1.14)</li>
				<li>Support for Eclipse Javascript formatter (since 1.14)</li>
				<li>Support for revelc.net XML formatter (since 1.14)</li>
				<li>Support for Jackson Json formatter (since 1.14)</li>
				<li>Support for manticore JSQLFormatter (Special thanks to <a href="https://github.com/manticore-projects">Andreas Reichel</a> for the contribution) (since 1.14.1)</li>
				<li>Support for remote configurations for Eclipse formatters (since 1.14.1)</li>
				<li>Support for Palantir Java Formatter (since 1.15.0)</li>
				<li>Support for Vertical Blank SQL Formatter (since 1.15.0)</li>
				<li>Support for DBeaver SQL Formatter (via Spotless) (since 1.15.0)</li>
				<li>Option to organize imports with Google and Palantir Formatter instead of NetBeans (since 1.15.2)</li>
			</ul>
		</section>
		<section name="History of this plugin">
			<ul>
				<li>
					The original idea is based on
					<a href="http://epochcoder.blogspot.com/2013/08/import-eclipse-formatter-into-netbeans.html">
						http://epochcoder.blogspot.com/2013/08/import-eclipse-formatter-into-netbeans.html
					</a>
					from <a href="https://github.com/epochcoder">Willie Scholtz</a>
				</li>
				<li>
					<a href="https://github.com/geertjanw">Geertjan Wielenga</a> made further investigations on
					that idea and
					<a href="https://blogs.oracle.com/geertjan/entry/eclipse_formatter_for_netbeans_ide">
						put everything together</a> to create a first NetBeans Plugin out of this idea
				</li>
				<li>
					This was then <a href="https://github.com/markiewb/eclipsecodeformatter_for_netbeans/">forked</a>
					by <a href="https://github.com/markiewb">Benno Markiewicz</a>
				</li>
				<li>
					<a href="https://github.com/markiewb">Benno Markiewicz</a> stopped the development on the
					plugin and so <a href="https://github.com/geertjanw">Geertjan Wielenga</a> forked it again and
					was looking for someone who wanted to take it over
				</li>
				<li>
					I think I used this plugin since I use NetBeans, because in every company I was so far, I had
					exactly this circumstance that the formatting configuration was always there for Eclipse, but
					not for NetBeans. And because I prefer NetBeans over Eclipse I had to find a way to use
					NetBeans but the code style configuration from Eclipse. I'm happy that I can give back
					something to the community now by continuing the development of this plugin.
				</li>
			</ul>
		</section>
	</body>
</document>
